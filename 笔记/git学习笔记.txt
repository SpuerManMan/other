git是一个版本控制系统，github是一个基于git的代码托管平台

1、创建一个Git仓库，使用git init命令。

2、添加文件到Git仓库，分两步：

第一步，使用命令git add <file>，注意，可反复多次使用，添加多个文件；

第二步，使用命令git commit，完成。（git commit -m "注释"）

3、版本回退
 HEAD指向的版本就是当前版本，使用命令git reset --hard commit_id

4、git log可以查看提交历史

5、git reflog查看命令历史
6、git status 查看状态

7、用git diff HEAD -- readme.txt命令可以查看工作区和版本库里面最新版本的区别：

8、
场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。

场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD file，就回到了场景1，第二步按场景1操作。

9、git rm用于删除一个文件

10、关联一个远程库，使用命令

git remote add origin https://github.com/SpuerManMan/interfaceTest.git
11、使用命令git push -u origin master第一次推送master分支的所有内容到远程仓库
12、使用命令git push origin master推送最新修改到远程仓库
13、git clone命令克隆 git clone https://github.com/SpuerManMan/learngit.git；
14、分支操作
查看分支：git branch

创建分支：git branch <name>

切换分支：git checkout <name>

创建+切换分支：git checkout -b <name>

合并某分支到当前分支：git merge <name>

删除分支：git branch -d <name>

15、git log --graph --pretty=oneline --abbrev-commit 可以看到分支的合并情况

16、--no-ff参数就可以用普通模式合并
git merge --no-ff -m "merge with no-ff" dev


17、当手头工作没有完成时，先把工作现场git stash一下，然后去修复bug，修复后，再git stash pop，回到工作现场。

18、git stash 隐藏工作现场区

19、git stash list 查看工作现场

20、git stash apply恢复工作现场，但是恢复后，stash内容并不删除，你需要用git stash drop来删除

21、git branch -D <name>强行删除要丢弃一个没有被合并过的分支。

22、git push origin <branch-name>推送自己的修改

23、查看远程库信息，使用git remote -v

24、从本地推送分支，使用git push origin branch-name，如果推送失败，先用git pull抓取远程的新提交

25、在本地创建和远程分支对应的分支，使用git checkout -b branch-name origin/branch-name，本地和远程分支的名称最好一致

26、建立本地分支和远程分支的关联，使用git branch --set-upstream branch-name origin/branch-name；

27、git tag <name>打一个新标签：

28、git tag查看所有标签

29、git show <tagname>查看标签信息

30、可以创建带有说明的标签，用-a指定标签名，-m指定说明文字：  git tag -a v0.1 -m "version 0.1 released" 1094adb

31、git tag -d v0.1 可以删除标签

32、git push origin <tagname> 推送某个标签到远程

33、一次性推送全部尚未推送到远程的本地标签 git push origin --tags

34、远程删除标签  git push origin :refs/tags/v0.9